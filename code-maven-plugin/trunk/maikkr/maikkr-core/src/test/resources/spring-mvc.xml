<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:hbhk="http://hbhk.aili.org/schema/hbhk"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           	http://hbhk.aili.org/schema/hbhk  
			http://hbhk.aili.org/schema/hbhk/aili-spring-ext.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop.xsd
           ">
	<!-- 动态注入dao实现类 -->
	<!-- <hbhk:dao-config base-package="org.hbhk.**.dao" /> -->

	<context:property-placeholder location="classpath:config.properties" />
	<!-- 开启注解扫描 -->
	<context:annotation-config />
	<context:component-scan base-package="org.hbhk.**.server">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<!--开启注解代理 -->
	<aop:aspectj-autoproxy />
	<!-- 代理dao -->
	<bean class="org.hbhk.aili.orm.server.aspect.QueryAspect"></bean>

	<!--数据源 -->
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${db.driverClass}" />
		<property name="url" value="${db.jdbcUrl}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />
	</bean>
	<!-- 事务注解支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 数据连接管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="resourceBean" class="org.hbhk.aili.core.server.context.ResourceRoot"
		init-method="init" />

	<!-- 约定优于配置，约定优于配置 -->

	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理 -->
	<mvc:resources mapping="#{resourceBean.resourcePrefix}/images/**"
		location="/images/" cache-period="31556926" />
	<mvc:resources mapping="#{resourceBean.resourcePrefix}/scripts/**"
		location="/scripts/" />
	<mvc:resources mapping="#{resourceBean.resourcePrefix}/styles/**"
		location="/styles/" />

	<!-- 异常统一处理 -->
	<bean class="org.hbhk.aili.core.server.ex.GlobalExceptionController" />
	<!-- 扫描所有的controller -->
	<context:component-scan base-package="org.hbhk.**.server.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<!-- <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" 
			/> -->
	</context:component-scan>

	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="false">
			<!-- <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"> 
				</bean> -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 启用基于注解的处理器映射，添加拦截器，类级别的处理器映射 -->
	<mvc:interceptors>
		<!-- <mvc:interceptor> <mvc:mapping path="/**" /> <mvc:exclude-mapping 
			path="#{resourceBean.resourcePrefix}/**" /> <bean class="org.hbhk.aili.security.server.security.SecurityInterceptor" 
			/> </mvc:interceptor> -->
		<!-- <mvc:interceptor> <mvc:mapping path="/**" /> <mvc:exclude-mapping 
			path="#{resourceBean.resourcePrefix}/**" /> <bean class="org.hbhk.aili.security.server.security.LoginLimitInterceptor" 
			/> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <mvc:exclude-mapping 
			path="#{resourceBean.resourcePrefix}/**" /> <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" 
			/> </mvc:interceptor> -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="#{resourceBean.resourcePrefix}/**" />
			<bean
				class="org.hbhk.aili.core.server.interceptor.PerformanceWatchInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="#{resourceBean.resourcePrefix}/**" />
			<bean class="org.hbhk.maikkr.core.server.interceptor.SecurityInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="#{resourceBean.resourcePrefix}/**" />
			<bean class="org.hbhk.maikkr.backend.server.interceptor.AdminIntercptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="#{resourceBean.resourcePrefix}/**" />
			<bean class="org.hbhk.aili.core.server.deploy.spring.ModuleInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<bean class="jetbrick.template.web.springmvc.JetTemplateViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jhtml" />
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="order" value="8888" />
	</bean>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="9999" />
	</bean>

	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="true" />
		<property name="defaultContentType" value="application/json" />
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
				text=text/json
			</value>
		</property>
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="20000000" />
		<property name="maxInMemorySize" value="4098"></property>
	</bean>

	<!--spring 国际化 -->
	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" 
		/> <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
		<property name="basenames"> <list> 配置语言文件的地址的默认配置文件,在这里我是message_zh_CN.properties 
		<value>classpath:org/hbhk/module/framework/server/META-INF/messages/message_zh_CN 
		</value> </list> </property> <property name="cacheSeconds" value="-1" /> 
		</bean> -->
	<!-- 异常处理 -->
	<bean class="org.hbhk.maikkr.core.server.interceptor.ExceptionResolver">
		<property name="error404" value="error404.html" />
		<property name="excption" value="error404.html" />
	</bean>
</beans>   