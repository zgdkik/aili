<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd ">

	<bean id="fossProcess" class="org.hbhk.aili.esb.server.foss.processor.FossProcess">
		<property name="auditLogService" ref="auditLogService" />
		<property name="configLoader" ref="serviceConfigLoader" />
	</bean>

	<camel:camelContext id="foss_jms_common_camelContext"
		errorHandlerRef="transactionErrorHandler">

		<!-- FOSS作为客户端，发出请求到相应的服务端系统 -->
		<camel:route id="foss_jms_request_out_route">
			<camel:from uri="ESBMQ:QU_HBHK_REQUEST_COM_OUT?disableReplyTo=true&amp;maxConcurrentConsumers=40&amp;concurrentConsumers=15" />
			<camel:transacted />
			<!-- 判断服务是否存在，如果不存在，走异常路由；如果存在，走正常路由 -->
			<camel:dynamicRouter>
				<camel:method bean="validateDynamicRouter" method="route" />
			</camel:dynamicRouter>
		</camel:route>

		<!-- FOSS作为服务端，转发响应到相应的客户端系统 -->
		<camel:route id="foss_jms_response_out_route">
			<camel:from uri="ESBMQ:QU_HBHK_RESPONSE_COM_OUT?disableReplyTo=true" />
			<camel:transacted />
			<!-- 判断服务是否存在，如果不存在，走异常路由；如果存在，走正常路由 -->
			<camel:dynamicRouter>
				<camel:method bean="validateDynamicRouter" method="route" />
			</camel:dynamicRouter>
		</camel:route>

		<camel:route id="normal">
			<camel:from uri="direct:normal" />
			<!-- 消息的审计日志和状态处理 -->
			<camel:process ref="fossProcess" />
			<!-- 根据服务编码发送对相应的队列 -->
			<camel:dynamicRouter>
				<camel:method bean="fossDynamicRouterBean" method="route1" />
			</camel:dynamicRouter>
			<camel:when>
				<camel:description>当消息到ESB，然后ESB调用后端服务，后端服务又没有返回值时，此时的消息流到ESB就终止了。</camel:description>
				<camel:simple>${header.CamelSlipEndpoint} == null</camel:simple>
				<camel:setHeader headerName="CamelSlipEndpoint">
					<camel:simple>dpesb_stop</camel:simple>
				</camel:setHeader>
			</camel:when>
			<camel:process ref="statusProcess" />
		</camel:route>


		<camel:route id="multi_server">
			<camel:from uri="direct:multi_server" />
			<camel:log message="${property.backServiceCode.size}"
				loggingLevel="DEBUG" />
			<camel:process ref="fossMultiServerCopyProcessor" />
			<camel:loop>
				<camel:simple>${property.backServiceCode.size}</camel:simple>
				<camel:log message="multi_server ready send ..."
					loggingLevel="DEBUG" />
				<camel:to uri="seda:multi_server_send" />
			</camel:loop>
		</camel:route>

		<camel:route id="multi_server_send">
			<camel:from uri="seda:multi_server_send" />
			<camel:log message="multi_server_send ready process and to ..."
				loggingLevel="DEBUG" />
			<camel:process ref="fossMultiServerProcessor" />
			<camel:dynamicRouter>
				<camel:method bean="fossDynamicRouterBean" method="route2" />
			</camel:dynamicRouter>
		</camel:route>

		<camel:route id="exception">
			<camel:from uri="direct:exception" />
			<!-- 记录失败队列和异常队列 -->
			<camel:process ref="exceptionProcessor" />
		</camel:route>
	</camel:camelContext>

	<bean id="fossMultiServerProcessor" class="org.hbhk.aili.esb.server.foss.sync.MultiServerProcessor">
		<property name="configLoader" ref="serviceConfigLoader" />
	</bean>
	<bean id="fossMultiServerCopyProcessor"
		class="org.hbhk.aili.esb.server.foss.sync.MultiServerCopyProcessor" />
	<bean id="fossDynamicRouterBean" class="org.hbhk.aili.esb.server.foss.sync.FossDynamicRouterBean">
		<property name="configLoader" ref="serviceConfigLoader" />
	</bean>

</beans>
