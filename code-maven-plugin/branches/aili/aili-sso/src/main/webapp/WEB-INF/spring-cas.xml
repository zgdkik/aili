<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<http entry-point-ref="casEntryPoint" access-decision-manager-ref="urlAccessDecisionManager">
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
		<!-- 登录设置 -->
		<!-- <form-login login-page="/login" default-target-url="/index"
			always-use-default-target="true" /> -->
		<!-- 登出设置 -->
		<logout logout-url="/logout" delete-cookies="JSESSIONID" />
		<!-- session控制 -->
		<!-- invalid-session-url="${cas.service.url}/login" 不需要配置让security跳转 -->
		<session-management>
			<concurrency-control session-registry-alias="sessionRegistry" />
		</session-management>
		<custom-filter position="CAS_FILTER" ref="casFilter" />
	</http>
	<!-- 密码加密方式 -->
	<!-- <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean> -->
	<!-- 认证管理 -->
	<authentication-manager alias="authenticationManager">
		<!-- <authentication-provider user-service-ref="userDetailsService"> -->
		<!-- <password-encoder ref="bcryptPasswordEncoder" /> -->
		<!-- </authentication-provider> -->
		<!--使用cas就不需要密码加密 -->
		<authentication-provider ref="casAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="userDetailsService" class="org.hbhk.spring.security.server.filter.UserDetailsServiceImpl"/>
	<beans:bean id="loginSuccessHandler" class="org.hbhk.spring.security.server.filter.LoginSuccessHandler"></beans:bean>
	<beans:bean id="urlAccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:bean class="org.hbhk.spring.security.server.filter.UrlAccessDecisionVoter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	<!-- cas config -->
	<beans:bean id="serviceProperties"
		class="org.springframework.security.cas.ServiceProperties">
		<!--认证成功后跳转的地址 -->
		<beans:property name="service" value="${web.url}" />
		<beans:property name="sendRenew" value="false" />
	</beans:bean>

	<beans:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationSuccessHandler" ref="loginSuccessHandler" />
	</beans:bean>

	<beans:bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<beans:property name="loginUrl" value="${cas.service.url}/login" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
	</beans:bean>

	<beans:bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<beans:property name="authenticationUserDetailsService">
			<beans:bean
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<beans:constructor-arg ref="userDetailsService" />
			</beans:bean>
		</beans:property>
		<beans:property name="serviceProperties" ref="serviceProperties" />
		<beans:property name="ticketValidator">
			<beans:bean
				class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<beans:constructor-arg index="0"
					value="${cas.service.url}" />
			</beans:bean>
		</beans:property>
		<beans:property name="key"
			value="an_id_for_this_auth_provider_only" />
	</beans:bean>
	<!--退出  -->
	<beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />
	<!-- This filter redirects to the CAS Server to signal Single Logout should 
		be performed -->
	<beans:bean
		class="org.springframework.security.web.authentication.logout.LogoutFilter"
		id="requestSingleLogoutFilter">
		<beans:constructor-arg value="${cas.service.url}/logout" />
		<beans:constructor-arg>
			<beans:bean
				class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</beans:constructor-arg>
		<beans:property value="/logout" name="filterProcessesUrl" />
	</beans:bean>
</beans:beans>